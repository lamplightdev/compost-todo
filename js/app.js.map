{"version":3,"file":"app.js","sources":["../../node_modules/@lamplightdev/compost/src/shadow-base-mixin.js","../../node_modules/@lamplightdev/compost/src/shadow-mixin.js","../../node_modules/@lamplightdev/compost/src/properties-mixin.js","../../node_modules/@lamplightdev/compost/src/events-mixin.js","../../node_modules/@lamplightdev/compost/src/compost-mixin.js","../../node_modules/@lamplightdev/compost/src/repeat-mixin.js","../src/components/todo-item.js","../src/components/todo-items.js","../src/components/todo-input.js","../src/components/my-todo.js"],"sourcesContent":["/**\n * Base class for other shadow mixins\n *\n * Attaches shadow root to current element, adds some helper properties\n * and adds method to initialise the shadow toot (implemented by sub classes)\n */\n\nconst CompostShadowBaseMixin = parent => (\n  class extends parent {\n    constructor() {\n      super();\n\n      this.attachShadow({ mode: 'open' });\n\n      this.initialRender();\n\n      this.$s = this.shadowRoot;\n      this.$ = this.$s.querySelector.bind(this.$s);\n      this.$$ = this.$s.querySelectorAll.bind(this.$s);\n\n      // keep a map of all elements with ids\n      this.$id = {};\n\n      this.$$('[id]').forEach((el) => {\n        this.$id[el.id] = el;\n      });\n    }\n\n    // called once when element is initialised\n    initialRender() {}\n\n    // called on subsequent renders, if necessary\n    invalidate() {}\n  }\n);\n\nexport default CompostShadowBaseMixin;\n","/**\n * A mixin to initialise the shadow root with a template formed from a string\n */\n\nimport CompostShadowBaseMixin from './shadow-base-mixin.js';\n\n// cache templates\nconst templateCache = {};\n\nconst CompostShadowMixin = parent => (\n  class extends CompostShadowBaseMixin(parent) {\n\n    /**\n     * return the template string to be rendered\n     */\n    render() {\n      return '';\n    }\n\n    initialRender() {\n      let template;\n\n      if (templateCache[this.tagName]) {\n        template = templateCache[this.tagName];\n      } else {\n        // create template element from string\n        const templateString = this.render();\n        template = document.createElement('template');\n        template.innerHTML = templateString;\n\n        // if no native shadow dom and polyfill included, use it\n        if (window.ShadyCSS && !window.ShadyCSS.nativeShadow) {\n          window.ShadyCSS.prepareTemplate(template, this.nodeName.toLowerCase());\n          window.ShadyCSS.styleElement(this);\n        }\n\n        templateCache[this.tagName] = template;\n      }\n\n      const instance = template.content.cloneNode(true);\n\n      this.shadowRoot.appendChild(instance);\n    }\n\n    // no data binding, so invalidate is a no-op\n    invalidate() {}\n  }\n);\n\nexport default CompostShadowMixin;\n","/**\n * Polymer inspired Custom Element property mixin\n * to allow definition of property types and observers\n */\n\n\n/*\n * Stack to hold the currently waiting observers.\n * Observers get processed FIFO, and the current stack\n * is processed in it's entirety at the end of each task\n * as a microtask (deferred using a promise)\n *\n * This means the order in which properties are set in a task\n * doesn't matter as each observer will have access to the latest\n * values of each property\n */\nconst setStack = [];\n\n// whether or not the stack is currently being processed\nlet loopPaused = true;\n\n// the loop to empty the setStack\nconst runLoop = () => {\n  loopPaused = false;\n\n  while (setStack.length > 0) {\n    const item = setStack.pop();\n\n    // only call observer if the value has changed\n    // (the value may have been set multiple times)\n    if (item.oldValue !== item.newValue) {\n      item.component[item.observer](item.oldValue, item.newValue);\n    }\n  }\n\n  loopPaused = true;\n};\n\nconst CompostPropertiesMixin = parent => (\n  class extends parent {\n    /**\n     * this holds the properties of the element\n     *\n     * returns an object keyed by the property name\n     *\n     * each property is an object containing:\n     *\n     * type: the Javascript type of the property\n     *  one of: String, Number, Boolean, Array, Object\n     *\n     * value (optional): the default value the property should take\n     *  otherwise undefined\n     *\n     * observer (optional): a method on the element that should be called\n     *  when the property changes - takes oldValue, newValue as args\n     *\n     * reflectToAttribute (optional): if true when the property changes, it's\n     *  value will set as an attribute on the element with the same name.\n     *  camelCased property names are converted to kebab-case\n     *\n     *\n     * Note: on initialisation of the element, any attribute with the same\n     * name as a property (kebab-case -> camelCase) will be set as the initial\n     * property value, overriding the default value from above\n     */\n    static get properties() {\n      return {};\n    }\n\n    static get observedAttributes() {\n      // Observe attributes for all defined properties\n      return Object.keys(this.properties)\n        .map(propName => this.propertyNameToAttributeName(propName));\n    }\n\n    constructor() {\n      super();\n\n      /**\n       * if the element has already been connected to the DOM, so we don't\n       * run initialisation more than once\n       */\n      this._connected = false;\n\n      /**\n       * an object to hold the current property values\n       */\n      this._props = {};\n\n      /**\n       * a map of property names to attribute names\n       */\n      this._propsToAttrs = {};\n\n      /**\n       * a map of attribute names to property names\n       */\n      this._attrsToProps = {};\n\n      /**\n       * which attributes we should ignore on next attributeChangedCallback\n       * to prevent infinite loops\n       */\n      this._ignoreNextAttributeChange = {};\n\n      Object.keys(this.constructor.properties).forEach((propName) => {\n        const attributeName = this.constructor.propertyNameToAttributeName(propName);\n\n        this._propsToAttrs[propName] = attributeName;\n        this._attrsToProps[attributeName] = propName;\n      });\n    }\n\n    static propertyNameToAttributeName(propName) {\n      return propName.replace(/([a-zA-Z])(?=[A-Z])/g, '$1-').toLowerCase();\n    }\n\n    connectedCallback() {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      // don't run if we've already defined the properties\n      if (!this._connected) {\n        Object.keys(this.constructor.properties).forEach((propName) => {\n          const attributeName = this._propsToAttrs[propName];\n\n          // initial property value is either that already set on the element\n          // or the default value it's been given\n          const initialValue = Object.prototype.hasOwnProperty.call(this, propName)\n            ? this[propName] : this.constructor.properties[propName].value;\n\n          // remove the current property\n          delete this[propName];\n\n          // define setters and getters for the properties\n          Object.defineProperty(this, propName, {\n            get: () => this._props[propName],\n            set: (value) => { this.set(propName, value); },\n          });\n\n          // set the property value either as the initial value, or if there is\n          // an attribute set, to the attribute value\n          if (!this.hasAttribute(attributeName)) {\n            this[propName] = initialValue;\n          } else {\n            this.attributeChangedCallback(\n              attributeName,\n              undefined,\n              this.getAttribute(attributeName),\n            );\n          }\n        });\n\n        this._connected = true;\n      }\n    }\n\n    attributeChangedCallback(name, oldValue, newValue) {\n      const propName = this._attrsToProps[name];\n\n      if (!this._ignoreNextAttributeChange[name]) {\n        // format property according to type\n        switch (this.constructor.properties[propName].type) {\n          case Number:\n            this[propName] = Number(newValue);\n            break;\n          case Boolean:\n            this[propName] = newValue !== null;\n            break;\n          case Array: case Object:\n            this[propName] = JSON.parse(newValue);\n            break;\n          default:\n            this[propName] = newValue;\n            break;\n        }\n      }\n\n      this._ignoreNextAttributeChange[name] = false;\n    }\n\n    /**\n     * The setter for the properties\n     */\n    set(propName, value) {\n      // keep ahold of the current value;\n      let oldValue = this._props[propName];\n\n      switch (this.constructor.properties[propName].type) {\n        case Number:\n          // Number(null) === 0, but we want to allow nulls\n          this._props[propName] = value === null ? null : Number(value);\n          break;\n        default:\n          this._props[propName] = value;\n          break;\n      }\n\n      // if property has changed\n      if (oldValue !== this[propName]) {\n        if (this.constructor.properties[propName].reflectToAttribute) {\n          const attributeName = this._propsToAttrs[propName];\n\n          // Remove the attribute if new value is null\n          if (this[propName] === null) {\n            this.removeAttribute(attributeName);\n          } else {\n            switch (this.constructor.properties[propName].type) {\n              case Boolean:\n                if (this[propName]) {\n                  // ignore the next attribute changed callback otherwise\n                  // there'll be an infinite loop\n                  this._ignoreNextAttributeChange[attributeName] = true;\n\n                  // a truthy value sets the attribute to an empty string\n                  this.setAttribute(attributeName, '');\n                } else {\n                  // a falsey value removes the attribute\n                  this.removeAttribute(attributeName);\n                }\n                break;\n              case Array: case Object:\n                // ignore the next attribute changed callback otherwise\n                // there'll be an infinite loop\n                this._ignoreNextAttributeChange[attributeName] = true;\n                this.setAttribute(attributeName, JSON.stringify(this[propName]));\n                break;\n              default:\n                // ignore the next attribute changed callback otherwise\n                // there'll be an infinite loop\n                this._ignoreNextAttributeChange[attributeName] = true;\n                this.setAttribute(attributeName, this[propName]);\n                break;\n            }\n          }\n        }\n\n        // if this property is observed\n        if (this.constructor.properties[propName].observer) {\n\n          // check to see if this property has been changed already in this task\n          const existingItemIndex = setStack.findIndex(item => (\n            item.component === this && item.propName === propName\n          ));\n\n          // if it has already been changed\n          if (existingItemIndex > -1) {\n            // find where in stack the previous changed is queued\n            const existingItem = setStack[existingItemIndex];\n            // remove it\n            setStack.splice(existingItemIndex, 1);\n            // keep the oldValue as the original property value\n            oldValue = existingItem.oldValue;\n          }\n\n          // put the observer on the stack to call later\n          setStack.unshift({\n            component: this,\n            propName,\n            observer: this.constructor.properties[propName].observer,\n            oldValue,\n            newValue: this[propName],\n          });\n\n          if (loopPaused) {\n            // wait until microtasks are run\n            Promise.resolve().then(() => {\n              if (loopPaused) {\n                loopPaused = false;\n                // process stack\n                runLoop();\n              }\n            });\n          }\n        }\n      }\n    }\n  }\n);\n\nexport default CompostPropertiesMixin;\n","\n/**\n * Mixin for adding event binding to the shadow DOM\n */\n\nconst CompostEventsMixin = parent => (\n  class extends parent {\n    /**\n     * a list of event types that can be bound\n     */\n    static get eventTypes() {\n      return ['abort', 'blur', 'cancel', 'canplay', 'canplaythrough', 'change', 'click', 'close', 'contextmenu', 'cuechange', 'dblclick', 'drag', 'dragend', 'dragenter', 'dragleave', 'dragover', 'dragstart', 'drop', 'durationchange', 'emptied', 'ended', 'error', 'focus', 'input', 'invalid', 'keydown', 'keypress', 'keyup', 'load', 'loadeddata', 'loadedmetadata', 'loadstart', 'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'mousewheel', 'pause', 'play', 'playing', 'progress', 'ratechange', 'reset', 'resize', 'scroll', 'seeked', 'seeking', 'select', 'stalled', 'submit', 'suspend', 'timeupdate', 'toggle', 'volumechange', 'waiting', 'wheel', 'gotpointercapture', 'lostpointercapture', 'pointerdown', 'pointermove', 'pointerup', 'pointercancel', 'pointerover', 'pointerout', 'pointerenter', 'pointerleave', 'beforecopy', 'beforecut', 'beforepaste', 'copy', 'cut', 'paste', 'search', 'selectstart'];\n    }\n\n    constructor() {\n      super();\n\n      // holds bound events so they can be unbound\n      this._boundEvents = [];\n    }\n\n    connectedCallback() {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      if (this.shadowRoot) {\n        this.constructor.eventTypes.forEach((eventType) => {\n          const attr = `on-${eventType}`;\n\n          this.shadowRoot.querySelectorAll(`[${attr}]`).forEach((el) => {\n            const event = {\n              el,\n              eventType,\n              fn: this[el.getAttribute(attr)].bind(this),\n            };\n\n            this.on(el, eventType, event.fn);\n\n            this._boundEvents.push(event);\n          });\n        });\n      }\n    }\n\n    disconnectedCallback() {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n\n      this._boundEvents.forEach((boundEvent) => {\n        this.off(boundEvent.el, boundEvent.eventType, boundEvent.fn);\n      });\n    }\n\n    /**\n     * bind a listener (func) to el\n     */\n    on(el, type, func) {\n      el.addEventListener(type, func);\n    }\n\n    /**\n     * unbind a listener (func) from el\n     */\n    off(el, type, func) {\n      el.removeEventListener(type, func);\n    }\n\n    /**\n     * fire a custom event\n     */\n    fire(type, detail, bubbles = true, composed = true) {\n      this.dispatchEvent(new CustomEvent(type, {\n        bubbles,\n        composed,\n        detail,\n      }));\n    }\n  }\n);\n\nexport default CompostEventsMixin;\n","import CompostShadowMixin from './shadow-mixin.js';\nimport CompostPropertiesMixin from './properties-mixin.js';\nimport CompostEventsMixin from './events-mixin.js';\n\n/**\n * Convenience mixin containing the 3 main Compost mixins\n *\n */\nconst CompostMixin = parent => (\n  class extends\n    CompostEventsMixin(CompostPropertiesMixin(CompostShadowMixin(parent))) {}\n);\n\nexport default CompostMixin;\n","/**\n * A mixin to stamp out a template from an array property (items)\n *\n * (pretty experimental and inefficient currently I think!)\n */\n\n// cache for template elememts\nconst templateCache = {};\n\nconst CompostRepeatMixin = parent => (\n  class extends parent {\n    static get properties() {\n      return {\n        // the property from which the elements will be bound to\n        items: {\n          type: Array,\n          value: [],\n          observer: 'observeItems',\n        },\n      };\n    }\n\n    render(staticTemplateString) {\n      // the elements will be added to the light DOM (slot)\n      return `\n        ${staticTemplateString}\n        <slot></slot>\n      `;\n    }\n\n    /**\n     * The template string to use for the value at items[index] (value)\n     */\n    getTemplateString(value, index) {\n      return '<div></div>';\n    }\n\n    /**\n     * Create a template element from a string\n     */\n    createTemplate(templateString) {\n      const template = document.createElement('template');\n      template.innerHTML = templateString;\n\n      return template;\n    }\n\n    /**\n     * a unique key for each element\n     */\n    getKey(value, index) {\n      return index;\n    }\n\n    /**\n     * how to initialise the element each time it's value changes\n     */\n    updateItem(el, value, index) {}\n\n\n    /**\n     * stamp out a new element\n     */\n    _createItem(value, index) {\n      const templateString = this.getTemplateString(value, index);\n      let template;\n\n      if (templateCache[templateString]) {\n        template = templateCache[templateString];\n      } else {\n        template = this.createTemplate(templateString);\n        templateCache[templateString] = template;\n      }\n\n      const instance = template.content.cloneNode(true);\n\n      // get first non-text node of instance\n\n      // const el = instance.children[0];\n      // above doesn't work on IE11\n      const el = [...instance.childNodes]\n        .filter(node => node.nodeType === Node.ELEMENT_NODE)[0];\n\n      // set key\n      el.key = this.getKey(value, index);\n\n      return el;\n    }\n\n    /**\n     * Update elements when items changes\n     */\n    observeItems(oldValues, values) {\n      let existingElements = this.$('slot').assignedNodes();\n\n      // add keys as sub properties on all items\n      const keyedValues = values.map((value, index) => (\n        Object.assign({}, value, {\n          key: this.getKey(value, index),\n        })\n      ));\n\n      const newKeys = keyedValues.map(value => value.key);\n      const existingKeys = existingElements.map(el => el.key);\n\n      // remove items that have no matching key in items\n      existingKeys.forEach((existingKey) => {\n        if (newKeys.indexOf(existingKey) === -1) {\n          const el = existingElements.find(existingEl => existingEl.key === existingKey);\n          this.removeChild(el);\n        }\n      });\n\n      // get existing elements after any removals\n      existingElements = this.$('slot').assignedNodes();\n\n      // get or create elements for each value in items\n      const orderedElements = [];\n\n      newKeys.forEach((newKey) => {\n        const index = keyedValues.findIndex(value => value.key === newKey);\n\n        let el;\n        // if no matching key, create new element else get existing\n        if (existingKeys.indexOf(newKey) === -1) {\n          el = this._createItem(values[index], index);\n        } else {\n          el = existingElements.find(existingEl => existingEl.key === newKey);\n        }\n\n        orderedElements.push(el);\n      });\n\n      // for each item, update element if needed\n      orderedElements.forEach((newChild, index) => {\n        const existingChild = existingElements[index];\n\n        if (existingChild) {\n          // if there's a new value at this index\n          if (newChild.key !== existingChild.key) {\n            // insert new element at this index, keeping old element\n            this.insertBefore(newChild, existingChild);\n          }\n        } else {\n          // add new element to end of current list\n\n          // Browsers using the webcomponents polyfill do no upgrade custom\n          // elements when using appendChild(?) on this. Appending to body,\n          // and then attaching to this seems to work.\n          document.querySelector('body').appendChild(newChild);\n          this.appendChild(newChild);\n        }\n\n        // update the item\n        this.updateItem(newChild, values[index], index);\n\n        existingElements = this.$('slot').assignedNodes();\n      });\n    }\n  }\n);\n\nexport default CompostRepeatMixin;\n","import CompostMixin from '../../../node_modules/@lamplightdev/compost/src/compost-mixin.js';\n\nclass TodoItem extends CompostMixin(HTMLElement) {\n  static get properties() {\n    return {\n      item: {\n        type: Object,\n        value: {},\n        observer: 'observeItem',\n      },\n    };\n  }\n\n  render() {\n    return `\n      <div>\n        <input type=\"checkbox\" on-change=\"toggleDone\">\n        <label></label>\n        <button on-click=\"remove\">x</button>\n      </div>\n    `;\n  }\n\n  observeItem(oldValue, newValue) {\n    this.$s.querySelector('label').textContent\n      = `${newValue.text} (${newValue.done ? '' : 'not '}done)`;\n\n    this.$s.querySelector('input').checked = newValue.done;\n  }\n\n  toggleDone() {\n    this.fire('todo-toggle', {\n      id: this.item.id,\n    });\n  }\n\n  remove() {\n    this.fire('todo-remove', {\n      id: this.item.id,\n    });\n  }\n}\n\ncustomElements.define('todo-item', TodoItem);\n","import CompostMixin from '../../../node_modules/@lamplightdev/compost/src/compost-mixin.js';\nimport CompostRepeatMixin from '../../../node_modules/@lamplightdev/compost/src/repeat-mixin.js';\n\nimport './todo-item.js';\n\nclass TodoItems extends CompostRepeatMixin(CompostMixin(HTMLElement)) {\n  render() {\n    return super.render(`\n    `);\n  }\n\n  getTemplateString() {\n    return '<todo-item></todo-item>';\n  }\n\n  getKey(value, index) {\n    return index;\n  }\n\n  updateItem(el, value) {\n    el.item = value;\n  }\n}\n\ncustomElements.define('todo-items', TodoItems);\n","import CompostMixin from '../../../node_modules/@lamplightdev/compost/src/compost-mixin.js';\nimport './todo-input.js';\nimport './todo-items.js';\n\nclass TodoInput extends CompostMixin(HTMLElement) {\n  render() {\n    return `\n      <form on-submit=\"add\">\n        <input type=\"text\" name=\"text\" placeholder=\"Add\">\n      </form>\n    `;\n  }\n\n  add(event) {\n    event.preventDefault();\n\n    const input = event.target.text;\n    const text = input.value.trim();\n\n    if (text) {\n      this.fire('todo-add', {\n        text,\n      });\n\n      input.value = '';\n    }\n  }\n}\n\ncustomElements.define('todo-input', TodoInput);\n","import CompostMixin from '../../../node_modules/@lamplightdev/compost/src/compost-mixin.js';\nimport './todo-input.js';\nimport './todo-items.js';\n\nclass MyTodo extends CompostMixin(HTMLElement) {\n  static get properties() {\n    return {\n      items: {\n        type: Array,\n        value: [],\n        observer: 'observeItems',\n      },\n\n      count: {\n        type: Number,\n        value: 2,\n      },\n    };\n  }\n\n  render() {\n    return `\n    <h1>Todos WC</h1>\n    <section>\n      <todo-input></todo-input>\n      <todo-items id=\"todo-items\"></todo-items>\n    </section>\n    `;\n  }\n\n  constructor() {\n    super();\n\n    this.addItem = this.addItem.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.toggleItem = this.toggleItem.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    this.on(this, 'todo-add', this.addItem);\n    this.on(this, 'todo-remove', this.removeItem);\n    this.on(this, 'todo-toggle', this.toggleItem);\n  }\n\n  observeItems(oldValue, newValue) {\n    this.$id['todo-items'].items = newValue;\n  }\n\n  addItem(event) {\n    this.count += 1;\n    this.items = this.items.slice();\n    this.items.push({\n      id: this.count - 1,\n      text: event.detail.text,\n      done: false,\n    });\n  }\n\n  removeItem(event) {\n    const id = event.detail.id;\n\n    this.items = this.items.slice();\n    const index = this.items.findIndex(item => item.id === id);\n    this.items.splice(index, 1);\n  }\n\n  toggleItem(event) {\n    const id = event.detail.id;\n\n    this.items = this.items.slice();\n    const index = this.items.findIndex(item => item.id === id);\n    this.items[index] = {\n      ...this.items[index],\n      done: !this.items[index].done,\n    };\n  }\n}\n\ncustomElements.define('my-todo', MyTodo);\n"],"names":["templateCache"],"mappings":"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"}